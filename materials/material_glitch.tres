[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://cn3u2jvxl2l1u"]

[sub_resource type="Shader" id="Shader_nfl67"]
code = "shader_type canvas_item;

uniform float shake_power = 0.03;
uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;
uniform float shake_rate_offset = 0;
uniform float shake_freeze: hint_range( 0.0, 1.0, 1.0 ) = 1.0;
uniform float shake_speed = 5.0;
uniform float shake_block_size = 30.5;
uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;

float random( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment( )
{
	float enable_shift = float(
		random( trunc( ((TIME * shake_freeze) + shake_rate_offset) * shake_speed ) )
	<	shake_rate
	);

	vec2 fixed_uv = SCREEN_UV;
	fixed_uv.x += (
		random(
			( trunc( SCREEN_UV.y * shake_block_size ) / shake_block_size )
		+	(TIME * shake_freeze)
		) - 0.5
	) * shake_power * enable_shift;

	vec4 pixel_color = texture(SCREEN_TEXTURE, fixed_uv);
	pixel_color.r = mix(
		pixel_color.r
	,	texture( SCREEN_TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ) ).r
	,	enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b
	,	texture( SCREEN_TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ) ).b
	,	enable_shift
	);
	COLOR = pixel_color;
}
"
metadata/_edit_res_path = "res://prefabs/glitch_plus.tscn::Shader_nfl67"

[resource]
shader = SubResource("Shader_nfl67")
shader_parameter/shake_power = 0.05
shader_parameter/shake_rate = 1.0
shader_parameter/shake_rate_offset = 0.0
shader_parameter/shake_freeze = 1.0
shader_parameter/shake_speed = 5.0
shader_parameter/shake_block_size = 30.5
shader_parameter/shake_color_rate = 0.03
